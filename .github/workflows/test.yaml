name: Python

on: push

jobs:
  test:
    name: Lint and run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ 3.7,3.8,3.9 ]

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Get Token that can access the OEFDB dev repo
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.OEFDB_BOT_APP_ID }}
          application_private_key: ${{ secrets.OEFDB_BOT_APP_PRIVATE_KEY }}

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Load cached Poetry installation
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ hashFiles('.github/workflows/test.yml') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{matrix.python}}-${{ hashFiles('pyproject.toml') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Load cached pre-commit environment
        uses: actions/cache@v2
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{matrix.python}}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Lint
        run: poetry run poe lint

      - name: Run tests
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        run: poetry run poe pytest
